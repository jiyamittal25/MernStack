{"ast":null,"code":"var _jsxFileName = \"E:\\\\SuiteSpot\\\\client\\\\src\\\\screens\\\\AdminBookingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminBookingScreen() {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const columns = [{\n    title: \"transactionid\",\n    dataIndex: \"transactionid\",\n    key: \"transactionid\"\n  }, {\n    title: \"roomid\",\n    dataIndex: \"roomid\",\n    key: \"roomid\"\n  }, {\n    title: \"room\",\n    dataIndex: \"room\",\n    key: \"room\"\n  }, {\n    title: \"fromdate\",\n    dataIndex: \"fromdate\",\n    key: \"fromdate\"\n  }, {\n    title: \"todate\",\n    dataIndex: \"todate\",\n    key: \"todate\"\n  }, {\n    title: \"status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: status => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: status === \"booked\" ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"green\",\n        children: \"CONFIRMED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"red\",\n        children: \"CANCELLED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }];\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : error.length > 0 ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: bookings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminBookingScreen, \"GZ5AaMiWFca7kLmIJnpnlrIrkqM=\");\n_c = AdminBookingScreen;\nexport default AdminBookingScreen;\nvar _c;\n$RefreshReg$(_c, \"AdminBookingScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Tag","Space","Loader","Error","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminBookingScreen","_s","bookings","setBookings","loading","setLoading","error","setError","columns","title","dataIndex","key","render","status","children","color","fileName","_jsxFileName","lineNumber","columnNumber","fetchMyData","data","post","console","log","className","length","msg","dataSource","_c","$RefreshReg$"],"sources":["E:/SuiteSpot/client/src/screens/AdminBookingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminBookingScreen() {\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const columns = [\n    {\n      title: \"transactionid\",\n      dataIndex: \"transactionid\",\n      key: \"transactionid\",\n    },\n    { title: \"roomid\", dataIndex: \"roomid\", key: \"roomid\" },\n    { title: \"room\", dataIndex: \"room\", key: \"room\" },\n    { title: \"fromdate\", dataIndex: \"fromdate\", key: \"fromdate\" },\n    { title: \"todate\", dataIndex: \"todate\", key: \"todate\" },\n    {\n      title: \"status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {status === \"booked\" ? (\n            <Tag color=\"green\">CONFIRMED</Tag>\n          ) : (\n            <Tag color=\"red\">CANCELLED</Tag>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return (\n    <div className=\"row\">\n      {loading ? (\n        <Loader></Loader>\n      ) : error.length > 0 ? (\n        <Error msg={error}></Error>\n      ) : (\n        <div className=\"col-md-12\">\n          <Table columns={columns} dataSource={bookings} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminBookingScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,EAAEC,KAAK,QAAQ,MAAM;AAExC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMoB,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,eAAe;IAC1BC,GAAG,EAAE;EACP,CAAC,EACD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,SAAS,EAAE,QAAQ;IAAEC,GAAG,EAAE;EAAS,CAAC,EACvD;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAO,CAAC,EACjD;IAAEF,KAAK,EAAE,UAAU;IAAEC,SAAS,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAW,CAAC,EAC7D;IAAEF,KAAK,EAAE,QAAQ;IAAEC,SAAS,EAAE,QAAQ;IAAEC,GAAG,EAAE;EAAS,CAAC,EACvD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAGC,MAAM,iBACbhB,OAAA,CAAAE,SAAA;MAAAe,QAAA,EACGD,MAAM,KAAK,QAAQ,gBAClBhB,OAAA,CAACL,GAAG;QAACuB,KAAK,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAElCtB,OAAA,CAACL,GAAG;QAACuB,KAAK,EAAC,KAAK;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAChC,gBACD;EAEN,CAAC,CACF;EAED,eAAeC,WAAWA,CAAA,EAAG;IAC3Bb,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMgB,IAAI,GAAG,CAAC,MAAM/B,KAAK,CAACgC,IAAI,CAAC,8BAA8B,CAAC,EAAED,IAAI;MACpElB,WAAW,CAACkB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdiB,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;MAClBC,QAAQ,CAACD,KAAK,CAAC;IACjB;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB;EAEAhB,SAAS,CAAC,MAAM;IACd+B,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACEvB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAX,QAAA,EACjBV,OAAO,gBACNP,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,GACfb,KAAK,CAACoB,MAAM,GAAG,CAAC,gBAClB7B,OAAA,CAACF,KAAK;MAACgC,GAAG,EAAErB;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3BtB,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAX,QAAA,eACxBjB,OAAA,CAACN,KAAK;QAACiB,OAAO,EAAEA,OAAQ;QAACoB,UAAU,EAAE1B;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA5DQD,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AA8D3B,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}